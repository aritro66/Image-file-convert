{"version":3,"sources":["images/converticon.png","components/NavigationBarDisplay.js","components/PngToJpeg.js","components/PngToWebp.js","components/JpegToPng.js","components/JpegToWebp.js","components/WebpToJpeg.js","components/WebpToPng.js","App.js","index.js"],"names":["NavigationBarDisplay","Navbar","bg","variant","Container","Brand","href","alt","src","logo","width","height","style","verticalAlign","className","fontSize","fontFamily","PngToJpeg","useState","convert","setConvert","showModal","setShowModal","imageUrl","setImageUrl","convImage","setConvImage","inputEl","useRef","Form","onSubmit","e","preventDefault","current","files","name","search","URL","createObjectURL","onReset","Group","controlId","Label","Control","type","ref","required","accept","Button","size","display","image","onConversion","url","format","margin","download","Modal","show","Header","Title","Body","Footer","onClick","PngToWebp","JpegToPng","JpegToWebp","WebpToJpeg","WebpToPng","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,MAA0B,wC,OCG1B,SAASA,IACpB,OACI,8BACI,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACI,cAACC,EAAA,EAAD,UACI,eAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,UACK,IACD,qBACIC,IAAI,GACJC,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPC,MAAO,CAACC,cAAc,UACtBC,UAAU,6BACX,IACH,sBAAMF,MAAO,CAACG,SAAS,OAAOC,WAAY,gBAA1C,2C,oDCZT,SAASC,IACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,iBAAO,MA4BvB,OACI,sBAAKd,UAAU,iBAAf,UACI,6CACA,eAACe,EAAA,EAAD,CAAMC,SAxBd,SAAoBC,GAChBA,EAAEC,kBACoD,IAAlDL,EAAQM,QAAQC,MAAM,GAAGC,KAAKC,OAAO,SACrChB,GAAW,GACXI,EAAYa,IAAIC,gBAAgBX,EAAQM,QAAQC,MAAM,OAGtDd,GAAW,GACXE,GAAa,KAgBeiB,QARpC,WACInB,GAAW,GACXI,EAAY,KAMR,UACI,eAACK,EAAA,EAAKW,MAAN,CAAYC,UAAU,WAAW3B,UAAU,OAA3C,UACI,cAACe,EAAA,EAAKa,MAAN,8BACA,cAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,IAAKlB,EAASmB,UAAQ,EAACC,OAAO,YAE5D,cAACC,EAAA,EAAD,CAAQ7C,QAAQ,UAAU8C,KAAK,KAAKL,KAAK,SAAzC,oBAGA,cAACI,EAAA,EAAD,CAAQ7C,QAAQ,SAAS8C,KAAK,KAAKL,KAAK,QAAxC,sBAKAzB,GAAW,qCACX,qBAAKP,MAAO,CAACsC,QAAQ,QAArB,SACA,cAAC,IAAD,CACIC,MAAO5B,EACP6B,aA9ChB,SAA8BC,GAC1B3B,EAAa2B,IA8CDC,OAAO,WAGX,qBAAK9C,IAAKe,EAAUhB,IAAI,GAAGK,MAAO,CAACD,OAAO,QAAQD,MAAM,QAAQ6C,OAAO,YACvE,uBACA,mBAAGjD,KAAMmB,EAAW+B,UAAQ,EAA5B,yBAGJ,eAACC,EAAA,EAAD,CAAOC,KAAMrC,EAAb,UACI,cAACoC,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMG,MAAP,0BAEJ,cAACH,EAAA,EAAMI,KAAP,qCACA,cAACJ,EAAA,EAAMK,OAAP,UACI,cAACd,EAAA,EAAD,CAAQ7C,QAAQ,YAAY4D,QA5C5C,WACIzC,GAAa,IA2CD,2BCtEL,SAAS0C,IACpB,MAA8B9C,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,iBAAO,MA4BvB,OACI,sBAAKd,UAAU,iBAAf,UACI,6CACA,eAACe,EAAA,EAAD,CAAMC,SAxBd,SAAoBC,GAChBA,EAAEC,kBACoD,IAAlDL,EAAQM,QAAQC,MAAM,GAAGC,KAAKC,OAAO,SACrChB,GAAW,GACXI,EAAYa,IAAIC,gBAAgBX,EAAQM,QAAQC,MAAM,OAGtDd,GAAW,GACXE,GAAa,KAgBeiB,QARpC,WACInB,GAAW,GACXI,EAAY,KAMR,UACI,eAACK,EAAA,EAAKW,MAAN,CAAYC,UAAU,WAAW3B,UAAU,OAA3C,UACI,cAACe,EAAA,EAAKa,MAAN,8BACA,cAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,IAAKlB,EAASmB,UAAQ,EAACC,OAAO,YAE5D,cAACC,EAAA,EAAD,CAAQ7C,QAAQ,UAAU8C,KAAK,KAAKL,KAAK,SAAzC,oBAGA,cAACI,EAAA,EAAD,CAAQ7C,QAAQ,SAAS8C,KAAK,KAAKL,KAAK,QAAxC,sBAKAzB,GAAW,qCACX,qBAAKP,MAAO,CAACsC,QAAQ,QAArB,SACA,cAAC,IAAD,CACIC,MAAO5B,EACP6B,aA9ChB,SAA8BC,GAC1B3B,EAAa2B,IA8CDC,OAAO,WAGX,qBAAK9C,IAAKe,EAAUhB,IAAI,GAAGK,MAAO,CAACD,OAAO,QAAQD,MAAM,QAAQ6C,OAAO,YACvE,uBACA,mBAAGjD,KAAMmB,EAAW+B,UAAQ,EAA5B,yBAGJ,eAACC,EAAA,EAAD,CAAOC,KAAMrC,EAAb,UACI,cAACoC,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMG,MAAP,0BAEJ,cAACH,EAAA,EAAMI,KAAP,qCACA,cAACJ,EAAA,EAAMK,OAAP,UACI,cAACd,EAAA,EAAD,CAAQ7C,QAAQ,YAAY4D,QA5C5C,WACIzC,GAAa,IA2CD,2BCpEL,SAAS2C,IACpB,MAA8B/C,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,iBAAO,MA4BvB,OACI,sBAAKd,UAAU,iBAAf,UACI,6CACA,eAACe,EAAA,EAAD,CAAMC,SAxBd,SAAoBC,GAChBA,EAAEC,kBACqD,IAAnDL,EAAQM,QAAQC,MAAM,GAAGC,KAAKC,OAAO,UACrChB,GAAW,GACXI,EAAYa,IAAIC,gBAAgBX,EAAQM,QAAQC,MAAM,OAGtDd,GAAW,GACXE,GAAa,KAgBeiB,QARpC,WACInB,GAAW,GACXI,EAAY,KAMR,UACI,eAACK,EAAA,EAAKW,MAAN,CAAYC,UAAU,WAAW3B,UAAU,OAA3C,UACI,cAACe,EAAA,EAAKa,MAAN,+BACA,cAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,IAAKlB,EAASmB,UAAQ,EAACC,OAAO,aAE5D,cAACC,EAAA,EAAD,CAAQ7C,QAAQ,UAAU8C,KAAK,KAAKL,KAAK,SAAzC,oBAGA,cAACI,EAAA,EAAD,CAAQ7C,QAAQ,SAAS8C,KAAK,KAAKL,KAAK,QAAxC,sBAKAzB,GAAW,qCACX,qBAAKP,MAAO,CAACsC,QAAQ,QAArB,SACA,cAAC,IAAD,CACIC,MAAO5B,EACP6B,aA9ChB,SAA8BC,GAC1B3B,EAAa2B,IA8CDC,OAAO,UAGX,qBAAK9C,IAAKe,EAAUhB,IAAI,GAAGK,MAAO,CAACD,OAAO,QAAQD,MAAM,QAAQ6C,OAAO,YACvE,uBACA,mBAAGjD,KAAMmB,EAAW+B,UAAQ,EAA5B,yBAGJ,eAACC,EAAA,EAAD,CAAOC,KAAMrC,EAAb,UACI,cAACoC,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMG,MAAP,0BAEJ,cAACH,EAAA,EAAMI,KAAP,sCACA,cAACJ,EAAA,EAAMK,OAAP,UACI,cAACd,EAAA,EAAD,CAAQ7C,QAAQ,YAAY4D,QA5C5C,WACIzC,GAAa,IA2CD,2BCpEL,SAAS4C,IACpB,MAA8BhD,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,iBAAO,MA4BvB,OACI,sBAAKd,UAAU,iBAAf,UACI,8CACA,eAACe,EAAA,EAAD,CAAMC,SAxBd,SAAoBC,GAChBA,EAAEC,kBACqD,IAAnDL,EAAQM,QAAQC,MAAM,GAAGC,KAAKC,OAAO,UACrChB,GAAW,GACXI,EAAYa,IAAIC,gBAAgBX,EAAQM,QAAQC,MAAM,OAGtDd,GAAW,GACXE,GAAa,KAgBeiB,QARpC,WACInB,GAAW,GACXI,EAAY,KAMR,UACI,eAACK,EAAA,EAAKW,MAAN,CAAYC,UAAU,WAAW3B,UAAU,OAA3C,UACI,cAACe,EAAA,EAAKa,MAAN,+BACA,cAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,IAAKlB,EAASmB,UAAQ,EAACC,OAAO,aAE5D,cAACC,EAAA,EAAD,CAAQ7C,QAAQ,UAAU8C,KAAK,KAAKL,KAAK,SAAzC,oBAGA,cAACI,EAAA,EAAD,CAAQ7C,QAAQ,SAAS8C,KAAK,KAAKL,KAAK,QAAxC,sBAKAzB,GAAW,qCACX,qBAAKP,MAAO,CAACsC,QAAQ,QAArB,SACA,cAAC,IAAD,CACIC,MAAO5B,EACP6B,aA9ChB,SAA8BC,GAC1B3B,EAAa2B,IA8CDC,OAAO,WAGX,qBAAK9C,IAAKe,EAAUhB,IAAI,GAAGK,MAAO,CAACD,OAAO,QAAQD,MAAM,QAAQ6C,OAAO,YACvE,uBACA,mBAAGjD,KAAMmB,EAAW+B,UAAQ,EAA5B,yBAGJ,eAACC,EAAA,EAAD,CAAOC,KAAMrC,EAAb,UACI,cAACoC,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMG,MAAP,0BAEJ,cAACH,EAAA,EAAMI,KAAP,sCACA,cAACJ,EAAA,EAAMK,OAAP,UACI,cAACd,EAAA,EAAD,CAAQ7C,QAAQ,YAAY4D,QA5C5C,WACIzC,GAAa,IA2CD,2BCpEL,SAAS6C,IACpB,MAA8BjD,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,iBAAO,MA4BvB,OACI,sBAAKd,UAAU,iBAAf,UACI,8CACA,eAACe,EAAA,EAAD,CAAMC,SAxBd,SAAoBC,GAChBA,EAAEC,kBACqD,IAAnDL,EAAQM,QAAQC,MAAM,GAAGC,KAAKC,OAAO,UACrChB,GAAW,GACXI,EAAYa,IAAIC,gBAAgBX,EAAQM,QAAQC,MAAM,OAGtDd,GAAW,GACXE,GAAa,KAgBeiB,QARpC,WACInB,GAAW,GACXI,EAAY,KAMR,UACI,eAACK,EAAA,EAAKW,MAAN,CAAYC,UAAU,WAAW3B,UAAU,OAA3C,UACI,cAACe,EAAA,EAAKa,MAAN,+BACA,cAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,IAAKlB,EAASmB,UAAQ,EAACC,OAAO,aAE5D,cAACC,EAAA,EAAD,CAAQ7C,QAAQ,UAAU8C,KAAK,KAAKL,KAAK,SAAzC,oBAGA,cAACI,EAAA,EAAD,CAAQ7C,QAAQ,SAAS8C,KAAK,KAAKL,KAAK,QAAxC,sBAKAzB,GAAW,qCACX,qBAAKP,MAAO,CAACsC,QAAQ,QAArB,SACA,cAAC,IAAD,CACIC,MAAO5B,EACP6B,aA9ChB,SAA8BC,GAC1B3B,EAAa2B,IA8CDC,OAAO,WAGX,qBAAK9C,IAAKe,EAAUhB,IAAI,GAAGK,MAAO,CAACD,OAAO,QAAQD,MAAM,QAAQ6C,OAAO,YACvE,uBACA,mBAAGjD,KAAMmB,EAAW+B,UAAQ,EAA5B,yBAGJ,eAACC,EAAA,EAAD,CAAOC,KAAMrC,EAAb,UACI,cAACoC,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMG,MAAP,0BAEJ,cAACH,EAAA,EAAMI,KAAP,sCACA,cAACJ,EAAA,EAAMK,OAAP,UACI,cAACd,EAAA,EAAD,CAAQ7C,QAAQ,YAAY4D,QA5C5C,WACIzC,GAAa,IA2CD,2BCpEL,SAAS8C,IACpB,MAA8BlD,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,iBAAO,MA4BvB,OACI,sBAAKd,UAAU,iBAAf,UACI,6CACA,eAACe,EAAA,EAAD,CAAMC,SAxBd,SAAoBC,GAChBA,EAAEC,kBACqD,IAAnDL,EAAQM,QAAQC,MAAM,GAAGC,KAAKC,OAAO,UACrChB,GAAW,GACXI,EAAYa,IAAIC,gBAAgBX,EAAQM,QAAQC,MAAM,OAGtDd,GAAW,GACXE,GAAa,KAgBeiB,QARpC,WACInB,GAAW,GACXI,EAAY,KAMR,UACI,eAACK,EAAA,EAAKW,MAAN,CAAYC,UAAU,WAAW3B,UAAU,OAA3C,UACI,cAACe,EAAA,EAAKa,MAAN,+BACA,cAACb,EAAA,EAAKc,QAAN,CAAcC,KAAK,OAAOC,IAAKlB,EAASmB,UAAQ,EAACC,OAAO,aAE5D,cAACC,EAAA,EAAD,CAAQ7C,QAAQ,UAAU8C,KAAK,KAAKL,KAAK,SAAzC,oBAGA,cAACI,EAAA,EAAD,CAAQ7C,QAAQ,SAAS8C,KAAK,KAAKL,KAAK,QAAxC,sBAKAzB,GAAW,qCACX,qBAAKP,MAAO,CAACsC,QAAQ,QAArB,SACA,cAAC,IAAD,CACIC,MAAO5B,EACP6B,aA9ChB,SAA8BC,GAC1B3B,EAAa2B,IA8CDC,OAAO,UAGX,qBAAK9C,IAAKe,EAAUhB,IAAI,GAAGK,MAAO,CAACD,OAAO,QAAQD,MAAM,QAAQ6C,OAAO,YACvE,uBACA,mBAAGjD,KAAMmB,EAAW+B,UAAQ,EAA5B,yBAGJ,eAACC,EAAA,EAAD,CAAOC,KAAMrC,EAAb,UACI,cAACoC,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMG,MAAP,0BAEJ,cAACH,EAAA,EAAMI,KAAP,sCACA,cAACJ,EAAA,EAAMK,OAAP,UACI,cAACd,EAAA,EAAD,CAAQ7C,QAAQ,YAAY4D,QA5C5C,WACIzC,GAAa,IA2CD,2BC7CL+C,MAhBf,WAEE,OACE,sBAAKvD,UAAU,MAAf,UACE,cAACd,EAAD,IACA,cAACiB,EAAD,IACA,cAAC+C,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,QCfNE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0b65a267.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/converticon.ab94e323.png\";","import React from 'react';\r\nimport {Navbar,Container} from 'react-bootstrap';\r\nimport logo from \"../images/converticon.png\";\r\nexport default function NavigationBarDisplay() {\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"#\">\r\n                        {\" \"}\r\n                        <img\r\n                            alt=\"\"\r\n                            src={logo}\r\n                            width=\"40\"\r\n                            height=\"40\"\r\n                            style={{verticalAlign:\"middle\"}}\r\n                            className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                        <span style={{fontSize:\"24px\",fontFamily: 'Merriweather'}}>Image File Converter</span>\r\n                    </Navbar.Brand>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Button ,Modal} from 'react-bootstrap';\r\nimport ConvertImage from \"react-convert-image\";\r\n\r\n\r\n\r\nexport default function PngToJpeg() {\r\n    const [convert, setConvert] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [convImage, setConvImage] = useState(\"\")\r\n    const inputEl = useRef(null);\r\n\r\n    function handleConvertedImage(url) {\r\n        setConvImage(url);\r\n        // console.log(url);\r\n    }\r\n\r\n    function handleForm(e) {\r\n        e.preventDefault();\r\n        if (inputEl.current.files[0].name.search(\".png\") !== -1) {\r\n            setConvert(true);\r\n            setImageUrl(URL.createObjectURL(inputEl.current.files[0]));\r\n        }\r\n        else {\r\n            setConvert(false);\r\n            setShowModal(true);\r\n        }\r\n\r\n    }\r\n    function closeModal() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    function resetForm() {\r\n        setConvert(false);\r\n        setImageUrl(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert-layout\">\r\n            <h2>PNG TO JPEG</h2>\r\n            <Form onSubmit={handleForm} onReset={resetForm}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Choose PNG File</Form.Label>\r\n                    <Form.Control type=\"file\" ref={inputEl} required accept=\".png\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button variant=\"danger\" size=\"lg\" type=\"reset\">\r\n                    Reset\r\n                </Button>\r\n            </Form>\r\n            {\r\n                convert && <>\r\n                <div style={{display:\"none\"}}> \r\n                <ConvertImage\r\n                    image={imageUrl}\r\n                    onConversion={handleConvertedImage}\r\n                    format=\"jpeg\"\r\n                />\r\n                </div>\r\n                <img src={imageUrl} alt=\"\" style={{height:\"100px\",width:\"100px\",margin:\"10px 0\"}} />\r\n                <br/>\r\n                <a href={convImage} download>Download</a>\r\n                </>\r\n            }\r\n            <Modal show={showModal}>\r\n                <Modal.Header>\r\n                    <Modal.Title>File Type</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Please choose PNG file</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Button ,Modal} from 'react-bootstrap';\r\nimport ConvertImage from \"react-convert-image\";\r\n\r\nexport default function PngToWebp() {\r\n    const [convert, setConvert] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [convImage, setConvImage] = useState(\"\")\r\n    const inputEl = useRef(null);\r\n\r\n    function handleConvertedImage(url) {\r\n        setConvImage(url);\r\n        // console.log(url);\r\n    }\r\n\r\n    function handleForm(e) {\r\n        e.preventDefault();\r\n        if (inputEl.current.files[0].name.search(\".png\") !== -1) {\r\n            setConvert(true);\r\n            setImageUrl(URL.createObjectURL(inputEl.current.files[0]));\r\n        }\r\n        else {\r\n            setConvert(false);\r\n            setShowModal(true);\r\n        }\r\n\r\n    }\r\n    function closeModal() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    function resetForm() {\r\n        setConvert(false);\r\n        setImageUrl(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert-layout\">\r\n            <h2>PNG TO WEBP</h2>\r\n            <Form onSubmit={handleForm} onReset={resetForm}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Choose PNG File</Form.Label>\r\n                    <Form.Control type=\"file\" ref={inputEl} required accept=\".png\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button variant=\"danger\" size=\"lg\" type=\"reset\">\r\n                    Reset\r\n                </Button>\r\n            </Form>\r\n            {\r\n                convert && <>\r\n                <div style={{display:\"none\"}}> \r\n                <ConvertImage\r\n                    image={imageUrl}\r\n                    onConversion={handleConvertedImage}\r\n                    format=\"webp\"\r\n                />\r\n                </div>\r\n                <img src={imageUrl} alt=\"\" style={{height:\"100px\",width:\"100px\",margin:\"10px 0\"}} />\r\n                <br/>\r\n                <a href={convImage} download>Download</a>\r\n                </>\r\n            }\r\n            <Modal show={showModal}>\r\n                <Modal.Header>\r\n                    <Modal.Title>File Type</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Please choose PNG file</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Button ,Modal} from 'react-bootstrap';\r\nimport ConvertImage from \"react-convert-image\";\r\n\r\nexport default function JpegToPng() {\r\n    const [convert, setConvert] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [convImage, setConvImage] = useState(\"\")\r\n    const inputEl = useRef(null);\r\n\r\n    function handleConvertedImage(url) {\r\n        setConvImage(url);\r\n        // console.log(url);\r\n    }\r\n\r\n    function handleForm(e) {\r\n        e.preventDefault();\r\n        if (inputEl.current.files[0].name.search(\".jpeg\") !== -1) {\r\n            setConvert(true);\r\n            setImageUrl(URL.createObjectURL(inputEl.current.files[0]));\r\n        }\r\n        else {\r\n            setConvert(false);\r\n            setShowModal(true);\r\n        }\r\n\r\n    }\r\n    function closeModal() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    function resetForm() {\r\n        setConvert(false);\r\n        setImageUrl(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert-layout\">\r\n            <h2>JPEG TO PNG</h2>\r\n            <Form onSubmit={handleForm} onReset={resetForm}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Choose JPEG File</Form.Label>\r\n                    <Form.Control type=\"file\" ref={inputEl} required accept=\".jpeg\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button variant=\"danger\" size=\"lg\" type=\"reset\">\r\n                    Reset\r\n                </Button>\r\n            </Form>\r\n            {\r\n                convert && <>\r\n                <div style={{display:\"none\"}}> \r\n                <ConvertImage\r\n                    image={imageUrl}\r\n                    onConversion={handleConvertedImage}\r\n                    format=\"png\"\r\n                />\r\n                </div>\r\n                <img src={imageUrl} alt=\"\" style={{height:\"100px\",width:\"100px\",margin:\"10px 0\"}} />\r\n                <br/>\r\n                <a href={convImage} download>Download</a>\r\n                </>\r\n            }\r\n            <Modal show={showModal}>\r\n                <Modal.Header>\r\n                    <Modal.Title>File Type</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Please choose JPEG file</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Button ,Modal} from 'react-bootstrap';\r\nimport ConvertImage from \"react-convert-image\";\r\n\r\nexport default function JpegToWebp() {\r\n    const [convert, setConvert] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [convImage, setConvImage] = useState(\"\")\r\n    const inputEl = useRef(null);\r\n\r\n    function handleConvertedImage(url) {\r\n        setConvImage(url);\r\n        // console.log(url);\r\n    }\r\n\r\n    function handleForm(e) {\r\n        e.preventDefault();\r\n        if (inputEl.current.files[0].name.search(\".jpeg\") !== -1) {\r\n            setConvert(true);\r\n            setImageUrl(URL.createObjectURL(inputEl.current.files[0]));\r\n        }\r\n        else {\r\n            setConvert(false);\r\n            setShowModal(true);\r\n        }\r\n\r\n    }\r\n    function closeModal() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    function resetForm() {\r\n        setConvert(false);\r\n        setImageUrl(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert-layout\">\r\n            <h2>JPEG TO WEBP</h2>\r\n            <Form onSubmit={handleForm} onReset={resetForm}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Choose JPEG File</Form.Label>\r\n                    <Form.Control type=\"file\" ref={inputEl} required accept=\".jpeg\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button variant=\"danger\" size=\"lg\" type=\"reset\">\r\n                    Reset\r\n                </Button>\r\n            </Form>\r\n            {\r\n                convert && <>\r\n                <div style={{display:\"none\"}}> \r\n                <ConvertImage\r\n                    image={imageUrl}\r\n                    onConversion={handleConvertedImage}\r\n                    format=\"webp\"\r\n                />\r\n                </div>\r\n                <img src={imageUrl} alt=\"\" style={{height:\"100px\",width:\"100px\",margin:\"10px 0\"}} />\r\n                <br/>\r\n                <a href={convImage} download>Download</a>\r\n                </>\r\n            }\r\n            <Modal show={showModal}>\r\n                <Modal.Header>\r\n                    <Modal.Title>File Type</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Please choose JPEG file</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Button ,Modal} from 'react-bootstrap';\r\nimport ConvertImage from \"react-convert-image\";\r\n\r\nexport default function WebpToJpeg() {\r\n    const [convert, setConvert] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [convImage, setConvImage] = useState(\"\")\r\n    const inputEl = useRef(null);\r\n\r\n    function handleConvertedImage(url) {\r\n        setConvImage(url);\r\n        // console.log(url);\r\n    }\r\n\r\n    function handleForm(e) {\r\n        e.preventDefault();\r\n        if (inputEl.current.files[0].name.search(\".webp\") !== -1) {\r\n            setConvert(true);\r\n            setImageUrl(URL.createObjectURL(inputEl.current.files[0]));\r\n        }\r\n        else {\r\n            setConvert(false);\r\n            setShowModal(true);\r\n        }\r\n\r\n    }\r\n    function closeModal() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    function resetForm() {\r\n        setConvert(false);\r\n        setImageUrl(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert-layout\">\r\n            <h2>WEBP TO JPEG</h2>\r\n            <Form onSubmit={handleForm} onReset={resetForm}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Choose WEBP File</Form.Label>\r\n                    <Form.Control type=\"file\" ref={inputEl} required accept=\".webp\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button variant=\"danger\" size=\"lg\" type=\"reset\">\r\n                    Reset\r\n                </Button>\r\n            </Form>\r\n            {\r\n                convert && <>\r\n                <div style={{display:\"none\"}}> \r\n                <ConvertImage\r\n                    image={imageUrl}\r\n                    onConversion={handleConvertedImage}\r\n                    format=\"jpeg\"\r\n                />\r\n                </div>\r\n                <img src={imageUrl} alt=\"\" style={{height:\"100px\",width:\"100px\",margin:\"10px 0\"}} />\r\n                <br/>\r\n                <a href={convImage} download>Download</a>\r\n                </>\r\n            }\r\n            <Modal show={showModal}>\r\n                <Modal.Header>\r\n                    <Modal.Title>File Type</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Please choose WEBP file</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Button ,Modal} from 'react-bootstrap';\r\nimport ConvertImage from \"react-convert-image\";\r\n\r\nexport default function WebpToPng() {\r\n    const [convert, setConvert] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [convImage, setConvImage] = useState(\"\")\r\n    const inputEl = useRef(null);\r\n\r\n    function handleConvertedImage(url) {\r\n        setConvImage(url);\r\n        // console.log(url);\r\n    }\r\n\r\n    function handleForm(e) {\r\n        e.preventDefault();\r\n        if (inputEl.current.files[0].name.search(\".webp\") !== -1) {\r\n            setConvert(true);\r\n            setImageUrl(URL.createObjectURL(inputEl.current.files[0]));\r\n        }\r\n        else {\r\n            setConvert(false);\r\n            setShowModal(true);\r\n        }\r\n\r\n    }\r\n    function closeModal() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    function resetForm() {\r\n        setConvert(false);\r\n        setImageUrl(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"convert-layout\">\r\n            <h2>WEBP TO PNG</h2>\r\n            <Form onSubmit={handleForm} onReset={resetForm}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Choose WEBP File</Form.Label>\r\n                    <Form.Control type=\"file\" ref={inputEl} required accept=\".webp\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button variant=\"danger\" size=\"lg\" type=\"reset\">\r\n                    Reset\r\n                </Button>\r\n            </Form>\r\n            {\r\n                convert && <>\r\n                <div style={{display:\"none\"}}> \r\n                <ConvertImage\r\n                    image={imageUrl}\r\n                    onConversion={handleConvertedImage}\r\n                    format=\"png\"\r\n                />\r\n                </div>\r\n                <img src={imageUrl} alt=\"\" style={{height:\"100px\",width:\"100px\",margin:\"10px 0\"}} />\r\n                <br/>\r\n                <a href={convImage} download>Download</a>\r\n                </>\r\n            }\r\n            <Modal show={showModal}>\r\n                <Modal.Header>\r\n                    <Modal.Title>File Type</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Please choose WEBP file</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React from \"react\";\nimport NavigationBarDisplay from './components/NavigationBarDisplay';\nimport PngToJpeg from './components/PngToJpeg';\nimport PngToWebp from './components/PngToWebp';\nimport JpegToPng from \"./components/JpegToPng\";\nimport JpegToWebp from './components/JpegToWebp';\nimport WebpToJpeg from './components/WebpToJpeg';\nimport WebpToPng from './components/WebpToPng';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <NavigationBarDisplay />\n      <PngToJpeg />\n      <PngToWebp />\n      <JpegToPng />\n      <JpegToWebp />\n      <WebpToJpeg />\n      <WebpToPng />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}